name: Expense Tracker App for Docker 

on:
    push:

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build image
              run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/expense-tracker:6.0 .

            - name: Push image
              run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/expense-tracker:6.0

    terraform:
        runs-on: ubuntu-latest
        defaults: 
            run: 
                working-directory: terraform/
                shell: bash

        steps:
            - name: Checkout 
              uses: actions/checkout@v4

            - name: Setup AWS
              uses: aws-actions/configure-aws-credentials@v4.1.0
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-north-1

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_wrapper: false
                      
            - name: Terraform Init
              run: terraform init
    
            - name: Terraform Plan
              run: terraform plan -input=false
    
            - name: Terraform Apply
              run: terraform apply -auto-approve -input=false

            - name: Export server IP output
              id: ip
              working-directory: terraform
              run: |
                echo "SERVER_IP=$(terraform output -raw public_ip)" >> $GITHUB_ENV

            - name: Write SSH Key
              run: |
                echo "${{ secrets.SSH_KEY }}" | base64 -d > sample_keys.pem
                chmod 600 sample_keys.pem
              

            - name: Install Ansible
              run: sudo apt-get update && sudo apt-get install -y ansible

            - name: Set up inventory
              working-directory: ansible
              run: |
                echo "[app]" > hosts.ini
                echo "$SERVER_IP ansible_user=ubuntu ansible_ssh_private_key_file=sample_keys.pem" >> hosts.ini
                cat hosts.ini
                
            
            - name: Run Ansible playbook
              working-directory: ansible
              run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i hosts.ini playbook.yml

            - name: Deployment finished
              run: echo "âœ… App deployed at http://$EC2_IP:3000"
             
